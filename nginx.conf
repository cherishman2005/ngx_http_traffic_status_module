#user  nobody;
#daemon off;
#master_process off;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  65535;
    use epoll;
}



http {
    include       mime.types;
    include /etc/nginx/sites-enabled/*;
    default_type  application/octet-stream;
    #server_tokens off;  #close banben xianshi
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    fastcgi_intercept_errors on;

    #sub_filter  '</head>'  '<style type="text/css">html {filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1); }</style></head>';
    #sub_filter_once on;

    #access_log  logs/access.log  main;
    
    log_format custom '$remote_addr - $remote_user $status $bytes_sent [$time_local] '
                      '"$request" "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_time';
    
    access_log /usr/local/nginx/logs/access1.log custom;
    error_log  /usr/local/nginx/logs/info.log debug;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    req_status_zone server_name $server_name 256k;
    req_status_zone server_addr $server_addr 256k;
    req_status server_name server_addr;

    realtime_zonesize  16m;


    proxy_temp_path /home/ngx_cache/proxy_temp_dir;
    proxy_cache_path /home/ngx_cache/proxy_cache_dir levels=1:2 keys_zone=cache_one:50m inactive=20m max_size=50m;

    upstream cloud {
        server 192.168.137.135:8888 weight=10;
        server 192.168.137.135:8081 weight=10;
        server 192.168.137.135:8082 weight=10;
    }

    upstream memcacheds {
        server 192.168.137.135:11211;
    }

    #server_tokens off;

    #lua_shared_dict shared_data 1m;
    #lua_shared_dict httpserverinfo 10m;
    lua_shared_dict traffic_data 10m;
    server {
        #listen   192.168.137.135:8080  ssl http2;
        listen   8080;
        listen 192.168.137.135;
        #listen 8080 default_server;

        ssl_certificate     /usr/local/openresty/nginx/conf/server.crt;
        ssl_certificate_key /usr/local/openresty/nginx/conf/server.key;

        server_name  www.mifi123.cn;
        cdn_rsp  Nginx001;
        #error_page 404 = /404.html;
        autoindex on;

        location /myhttp {
            root   /usr/local/nginx/html;
            default_type "text/plain";

            content_by_lua_block {
                ngx.say("memcached http2");
            }
            #index index.html;
        }

        location /mytraffic {
            traffic_statistics request_times packet_bytes status_codes;
        }

        location /mytraffic1 {
            traffic_statistics request_times;
        }

        location /mytraffic2 {
            traffic_statistics packet_bytes;
        }

        location /mytraffic3 {
            traffic_statistics status_codes;
        }

        log_by_lua_file /usr/local/nginx/lua/traffic/get_traffic_info.lua;
        location /mytraffic_lua {
            default_type "text/html";
            content_by_lua_file /usr/local/nginx/lua/traffic/show_traffic_info.lua;
        }

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
